{"version":3,"sources":["actions/index.js","pages/Login.js","services/auth/index.js","components/FormSelect.jsx","components/Form.jsx","components/Header.jsx","components/Tr.jsx","components/Table.jsx","components/Input.jsx","components/FormEdit.jsx","pages/Wallet.js","App.js","reducers/wallet.js","reducers/user.js","reducers/editCondition.js","reducers/index.js","store/index.js","index.js","images/wallet.png"],"names":["receiveCurrencies","currencies","type","setEditCondition","condition","expense","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Login","props","state","email","emailCondition","passwordCondition","handleCondition","bind","handleChange","handleClick","target","value","name","this","setState","test","length","history","dispatchEmail","push","buttonDisabled","className","options","height","data-testid","placeholder","onChange","event","id","onClick","disabled","React","Component","connect","dispatch","setUserEmail","FormSelect","title","htmlFor","Form","description","currency","method","tag","generateMethods","generateMethodsOptions","generateTags","generateTagOptions","generateCurrencies","generateCurrencyOptions","getCurrencies","a","fetch","response","json","map","index","key","addExpense","exchangeRates","style","backgroundColor","wallet","setExpense","Header","total","width","src","alt","user","expenses","reduce","ask","Tr","deleteExpense","editCondition","convertedValue","split","Number","toFixed","expenseId","removeExpense","Table","Input","handleExpense","editExpense","Wallet","FormEdit","edit","currenciesArray","Object","keys","splice","indexOf","App","exact","path","component","INITIAL_STATE","walletReducer","action","filter","userReducer","editReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.24b25508.chunk.js","sourcesContent":["export const SET_USER_EMAIL = 'SET_USER_EMAIL';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const RECEIVE_CURRENCIES = 'RECEIVE_CURRENCIES';\nexport const SET_EXPENSE = 'SET_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const SET_EDIT_CONDITION = 'SET_EDIT_CONDITION';\n\nexport const setUserEmail = (email) => ({\n  type: SET_USER_EMAIL,\n  email,\n});\n\nconst requestCurrencies = () => ({\n  type: REQUEST_CURRENCIES,\n});\n\nconst receiveCurrencies = (currencies) => ({\n  type: RECEIVE_CURRENCIES,\n  currencies,\n});\n\nexport const fetchCurrencies = () => async (dispatch) => {\n  dispatch(requestCurrencies());\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const currencies = await response.json();\n  const currenciesArray = Object.keys(currencies).map((key) => key);\n  currenciesArray.splice(currenciesArray.indexOf('USDT'), 1);\n  dispatch(receiveCurrencies(currenciesArray));\n};\n\nexport const setExpense = (expense, id = false) => ({\n  type: SET_EXPENSE,\n  id,\n  expense,\n});\n\nexport const removeExpense = (expenseId) => ({\n  type: REMOVE_EXPENSE,\n  expenseId,\n});\n\nexport const editExpense = (expense) => ({\n  type: EDIT_EXPENSE,\n  expense,\n});\n\nexport const setEditCondition = (condition, expense = {}) => ({\n  type: SET_EDIT_CONDITION,\n  condition,\n  expense,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Lottie from 'react-lottie';\nimport animationData from '../lottie/wallet.json';\nimport '../styles/login.css';\n\nimport { setUserEmail } from '../actions';\nimport { emailVerification, passwordVerification } from '../services/auth';\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      emailCondition: false,\n      passwordCondition: false,\n    };\n    this.handleCondition = this.handleCondition.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleCondition({ target: { value, name } }) {\n    if (name === 'email') {\n      const emailCondition = emailVerification(value);\n      this.setState({ emailCondition });\n    } else if (name === 'password') {\n      const passwordCondition = passwordVerification(value);\n      this.setState({ passwordCondition });\n    }\n  }\n\n  handleClick() {\n    const { email } = this.state;\n    const { history, dispatchEmail } = this.props;\n    dispatchEmail(email);\n    history.push('/carteira');\n  }\n\n  // eslint-disable-next-line max-lines-per-function\n  render() {\n    const { emailCondition, passwordCondition } = this.state;\n    const buttonDisabled = !(emailCondition && passwordCondition);\n    return (\n      <main className=\"login-page d-flex\">\n        <section className=\"d-flex align-items-center\">\n          <Lottie\n            options={ defaultOptions }\n            height={ 500 }\n          />\n        </section>\n        <section\n          className=\"w-50 d-flex flex-column\n          justify-content-center align-items-center\"\n        >\n          <form\n            className=\"form-login d-flex flex-column align-items-center\n            rounded text-center p-5\"\n          >\n            <h1 className=\"text-white fw-bold\">Login</h1>\n            <input\n              data-testid=\"email-input\"\n              type=\"email\"\n              className=\"form-control mt-2\"\n              placeholder=\"Email\"\n              name=\"email\"\n              onChange={ (event) => {\n                this.handleChange(event);\n                this.handleCondition(event);\n              } }\n              id=\"email\"\n            />\n            <input\n              data-testid=\"password-input\"\n              type=\"password\"\n              className=\"form-control mt-2\"\n              placeholder=\"Senha\"\n              name=\"password\"\n              onChange={ this.handleCondition }\n              id=\"password\"\n            />\n            <button\n              type=\"button\"\n              className=\"fw-bold fs-1 btn btn-danger mt-4 w-75\"\n              onClick={ this.handleClick }\n              disabled={ buttonDisabled }\n            >\n              Entrar\n            </button>\n          </form>\n        </section>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  dispatchEmail: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchEmail: (email) => dispatch(setUserEmail(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","// Referência para o Regex e função teste\n// https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n// https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\n\nconst SIX = 6;\n\nexport const emailVerification = (email) => {\n  const regex = /\\S+@\\S+\\.\\S+/;\n  return regex.test(email);\n};\n\nexport const passwordVerification = (password) => password.length >= SIX;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FormSelect extends Component {\n  render() {\n    const { id, title, options, onChange, value } = this.props;\n    return (\n      <label htmlFor={ id }>\n        { title }\n        <select\n          id={ id }\n          className=\"form-control\"\n          name={ id }\n          value={ value }\n          onChange={ onChange }\n        >\n          { options }\n        </select>\n      </label>\n    );\n  }\n}\n\nFormSelect.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  options: PropTypes.jsx,\n  onChange: PropTypes.func,\n}.isRequired;\n\nexport default FormSelect;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FormSelect from './FormSelect';\nimport { setExpense } from '../actions';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.generateMethods = this.generateMethodsOptions.bind(this);\n    this.generateTags = this.generateTagOptions.bind(this);\n    this.generateCurrencies = this.generateCurrencyOptions.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getCurrencies = this.getCurrencies.bind(this);\n  }\n\n  async getCurrencies() {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const currencies = await response.json();\n    return currencies;\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  generateMethodsOptions() {\n    const methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    return methods.map((method, index) => (\n      <option key={ index } value={ method }>{method}</option>\n    ));\n  }\n\n  generateTagOptions() {\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return tags.map((tag, index) => (\n      <option key={ index } value={ tag }>{tag}</option>\n    ));\n  }\n\n  generateCurrencyOptions() {\n    const { currencies } = this.props;\n    return currencies.map((currency, index) => (\n      <option key={ index } value={ currency }>{currency}</option>\n    ));\n  }\n\n  async handleClick() {\n    const { value, description, currency, method, tag } = this.state;\n    const { addExpense } = this.props;\n    const currencies = await this.getCurrencies();\n    const expense = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: currencies,\n    };\n    addExpense(expense);\n  }\n\n  // eslint-disable-next-line max-lines-per-function\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <form\n        className=\"d-flex justify-content-around align-items-center pt-2 pb-2\"\n        style={ { backgroundColor: '#E8505B' } }\n      >\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            onChange={ this.handleChange }\n            value={ value }\n            id=\"value\"\n            name=\"value\"\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={ this.handleChange }\n            value={ description }\n            id=\"description\"\n            name=\"description\"\n          />\n        </label>\n        <FormSelect\n          id=\"currency\"\n          value={ currency }\n          onChange={ this.handleChange }\n          title=\"Moeda:\"\n          options={ this.generateCurrencies() }\n        />\n        <FormSelect\n          id=\"method\"\n          value={ method }\n          onChange={ this.handleChange }\n          title=\"Método de Pagamento:\"\n          options={ this.generateMethods() }\n        />\n        <FormSelect\n          id=\"tag\"\n          value={ tag }\n          onChange={ this.handleChange }\n          title=\"Tag:\"\n          options={ this.generateTags() }\n        />\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n          className=\"btn btn-dark p-3\"\n        >\n          Adicionar Despesa\n\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  currencies: PropTypes.array,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpense: (expense) => dispatch(setExpense(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport wallet from '../images/wallet.png';\n\nclass Header extends Component {\n  render() {\n    const { email, total } = this.props;\n    return (\n      <header\n        className=\"d-flex justify-content-between align-items-center p-3\"\n        style={ { backgroundColor: '#191B1C' } }\n      >\n        <img\n          style={ { width: '50px', height: '50px' } }\n          src={ wallet }\n          alt=\"wallet-icon\"\n        />\n        <div className=\"d-flex text-white align-items-center pt-2\">\n          <p className=\"fw-bold\">Email:</p>\n          <p\n            data-testid=\"email-field\"\n            className=\"ml-2 fw-bold\"\n          >\n            {email}\n          </p>\n          <p\n            data-testid=\"total-field\"\n            className=\"ml-2 fw-bold\"\n          >\n            {total}\n          </p>\n          <p\n            data-testid=\"header-currency-field\"\n            className=\"ml-2 fw-bold\"\n          >\n            BRL\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  total: state.wallet.expenses.reduce((total, { value, currency, exchangeRates }) => total\n    + value * exchangeRates[currency].ask, 0),\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { removeExpense, setEditCondition } from '../actions';\n\nclass Tr extends Component {\n  render() {\n    const { expense, deleteExpense, editCondition } = this.props;\n    const { id, description, tag, method, value, currency, exchangeRates } = expense;\n    const { ask, name } = exchangeRates[currency];\n    const convertedValue = value * ask;\n    return (\n      <tr className=\"border-bottom\">\n        <td>{description}</td>\n        <td>{tag}</td>\n        <td>{method}</td>\n        <td>{value}</td>\n        <td>{name.split('/')[0]}</td>\n        <td>{Number(ask).toFixed(2)}</td>\n        <td>{Number(convertedValue).toFixed(2)}</td>\n        <td>Real</td>\n        <td>\n          <button\n            data-testid=\"delete-btn\"\n            className=\"btn btn-danger m-2\"\n            onClick={ () => deleteExpense(id) }\n            type=\"button\"\n          >\n            Excluir\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"edit-btn\"\n            className=\"btn btn-primary m-2\"\n            onClick={ () => { editCondition(true, expense); } }\n          >\n            Editar\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nTr.propTypes = {\n  expense: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    description: PropTypes.string,\n    tag: PropTypes.string,\n    method: PropTypes.string,\n    value: PropTypes.string,\n    currency: PropTypes.string,\n    exchangeRates: PropTypes.shape({\n      ask: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  }).isRequired,\n  deleteExpense: PropTypes.func.isRequired,\n  editCondition: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (expenseId) => dispatch(removeExpense(expenseId)),\n  editCondition: (condition, expense) => dispatch(setEditCondition(condition, expense)),\n});\n\nexport default connect(null, mapDispatchToProps)(Tr);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Tr from './Tr';\n\nclass Table extends Component {\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table className=\"w-100 text-center\">\n        <thead className=\"bg-dark text-white\">\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          {expenses.map((expense) => (\n            <Tr key={ expense.id } expense={ expense } />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends React.Component {\n  render() {\n    const { id, title, value, onChange } = this.props;\n    return (\n      <label htmlFor={ id }>\n        {title}\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          onChange={ onChange }\n          id={ id }\n          value={ value }\n          name={ id }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FormSelect from './FormSelect';\nimport { editExpense, setEditCondition } from '../actions';\nimport Input from './Input';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    const { id,\n      value, description, currency, method, tag, exchangeRates } = props.expense;\n    this.state = {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    };\n    this.generateMethods = this.generateMethodsOptions.bind(this);\n    this.generateTags = this.generateTagOptions.bind(this);\n    this.generateCurrencies = this.generateCurrencyOptions.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  generateMethodsOptions() {\n    const methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    return methods.map((method, index) => (\n      <option key={ index } value={ method }>{method}</option>\n    ));\n  }\n\n  generateTagOptions() {\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return tags.map((tag, index) => (\n      <option key={ index } value={ tag }>{tag}</option>\n    ));\n  }\n\n  generateCurrencyOptions() {\n    const { currencies } = this.props;\n    return currencies.map((currency, index) => (\n      <option key={ index } value={ currency }>{currency}</option>\n    ));\n  }\n\n  async handleClick() {\n    const { id, value, description, currency, method, tag, exchangeRates } = this.state;\n    const { handleExpense, editCondition } = this.props;\n    const expense = {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    };\n    handleExpense(expense);\n    editCondition(false);\n  }\n\n  // eslint-disable-next-line max-lines-per-function\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <form\n        className=\"d-flex justify-content-around align-items-center pt-2 pb-2\"\n        style={ { backgroundColor: '#E8505B' } }\n      >\n        <Input\n          id=\"value\"\n          value={ value }\n          onChange={ this.handleChange }\n          title=\"Valor:\"\n        />\n        <Input\n          id=\"description\"\n          value={ description }\n          onChange={ this.handleChange }\n          title=\"Descrição:\"\n        />\n        <FormSelect\n          id=\"currency\"\n          value={ currency }\n          onChange={ this.handleChange }\n          title=\"Moeda:\"\n          options={ this.generateCurrencies() }\n        />\n        <FormSelect\n          id=\"method\"\n          value={ method }\n          onChange={ this.handleChange }\n          title=\"Método de Pagamento:\"\n          options={ this.generateMethods() }\n        />\n        <FormSelect\n          id=\"tag\"\n          value={ tag }\n          onChange={ this.handleChange }\n          title=\"Tag:\"\n          options={ this.generateTags() }\n        />\n        <button\n          type=\"button\"\n          className=\"btn btn-primary p-3\"\n          data-testid=\"edit-btn\"\n          onClick={ this.handleClick }\n        >\n          Editar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleExpense: PropTypes.func.isRequired,\n  editCondition: PropTypes.func.isRequired,\n  expense: PropTypes.object.isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleExpense: (expense) => dispatch(editExpense(expense)),\n  editCondition: (condition) => dispatch(setEditCondition(condition)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Form from '../components/Form';\nimport Header from '../components/Header';\nimport { fetchCurrencies } from '../actions';\nimport Table from '../components/Table';\nimport FormEdit from '../components/FormEdit';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    const { editCondition, expense } = this.props;\n    return (\n      <>\n        <Header />\n        {editCondition ? <FormEdit expense={ expense } /> : <Form />}\n        <Table />\n      </>\n    );\n  }\n}\n\nWallet.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  editCondition: PropTypes.bool.isRequired,\n  expense: PropTypes.object.isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  editCondition: state.edit.editCondition,\n  expense: state.edit.expense,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import {\n  REQUEST_CURRENCIES,\n  RECEIVE_CURRENCIES,\n  SET_EXPENSE,\n  REMOVE_EXPENSE,\n  EDIT_EXPENSE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_CURRENCIES:\n    return state;\n  case RECEIVE_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.currencies,\n    };\n  case SET_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, {\n        id: action.id ? action.id : state.expenses.length,\n        ...action.expense }],\n    };\n  case REMOVE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.expenseId),\n    };\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      expenses: [action.expense,\n        ...state.expenses.filter((expense) => expense.id !== action.expense.id)],\n    };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","import { SET_USER_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER_EMAIL:\n    return {\n      ...state,\n      email: action.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","import { SET_EDIT_CONDITION } from '../actions';\n\nconst INITIAL_STATE = {\n  editCondition: false,\n};\n\nconst editReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_EDIT_CONDITION:\n    return { ...state, editCondition: action.condition, expense: action.expense };\n  default:\n    return state;\n  }\n};\n\nexport default editReducer;\n","import { combineReducers } from 'redux';\n\nimport walletReducer from './wallet';\nimport userReducer from './user';\nimport editReducer from './editCondition';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  wallet: walletReducer,\n  edit: editReducer });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/wallet.63abca6b.png\";"],"sourceRoot":""}